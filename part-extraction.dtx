% \iffalse meta-comment
%
% Copyright (C) 2015 by Josef Friedrich <josef@friedrich.rocks>
% ---------------------------------------------------------------------------
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Josef Friedrich.
%
% This work consists of the files part-extraction.dtx and part-extraction.ins
% and the derived filebase part-extraction.sty.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{part-extraction.dtx}
\documentclass{ltxdoc}
\usepackage[
  path = {./graphics/systems/},
  extension = png,
]{part-extraction}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}

\providecommand*{\url}{\texttt}
\GetFileInfo{part-extraction.dtx}
\title{The \textsf{part-extraction} package}
\author{Josef Friedrich \\ \url{josef@friedrich.rocks}}
\date{\fileversion~from \filedate}

\maketitle

\tableofcontents{}

\section{Introduction}

\section{Usage}

\DescribeMacro{\allsystems}

\begin{verbatim}
\begin{partextraction}
\allsystems
\end{partextraction}
\end{verbatim}

\begin{partextraction}[title = lol]
\system[3]

\dots
\end{partextraction}

%-----------------------------------------------------------------------
% \system
%-----------------------------------------------------------------------

\DescribeMacro{\system}

\begin{verbatim}
\begin{partextraction}
\system[2]
\end{partextraction}
\end{verbatim}

\begin{partextraction}
\system[2]
\end{partextraction}

%-----------------------------------------------------------------------
% \systemN
%-----------------------------------------------------------------------

\DescribeMacro{\systemN}

\begin{verbatim}
\begin{partextraction}
System No. 5\\
\systemN{5}

System No. 1\\
\systemN{1}
\end{partextraction}
\end{verbatim}

\begin{partextraction}
System No. 5\\
\systemN{5}

System No. 1\\
\systemN{1}
\end{partextraction}

\section{Options}

\subsection{path}

For relative paths use this pattern: |./../some/path/|.

%%
% title
%%

\subsection{title}

\begin{verbatim}
\begin{partextraction}[title = {A title}]
\system
\end{partextraction}
\end{verbatim}

\begin{partextraction}[title = {A title}]
\system
\end{partextraction}

%%
% subtitle
%%

\subsection{subtitle}

\begin{verbatim}
\begin{partextraction}[subtitle = {A subtitle}]
\system
\end{partextraction}
\end{verbatim}

\begin{partextraction}[subtitle = {A subtitle}]
\system
\end{partextraction}

%%
% composer
%%

\subsection{composer}

\begin{verbatim}
\begin{partextraction}[composer = {A composer}]
\system
\end{partextraction}
\end{verbatim}

\begin{partextraction}[composer = {A composer}]
\system
\end{partextraction}

%%
% all meta
%%

\subsection{All meta informations}

\begin{verbatim}
\begin{partextraction}[
  title = {A title},
  subtitle = {A subtitle},
  composer = {A composer}
]
\system
\end{partextraction}
\end{verbatim}

\begin{partextraction}[
  title = {A title},
  subtitle = {A subtitle},
  composer = {A composer}
]
\system
\end{partextraction}

\subsection{separator}

\begin{verbatim}
\begin{partextraction}[separator]
\system[3]
\end{partextraction}
\end{verbatim}

\begin{partextraction}[separator]
\system[3]
\end{partextraction}


\DocInput{part-extraction.dtx}
\PrintChanges
\PrintIndex
\end{document}
%</driver>
%<*readme>
LaTeX / LuaLaTex class to extract parts from a full ensemble score.

In the documentation is the
[piano reduction of "Die Sch√∂pfung" by Joseph Haydn](http://imslp.org/wiki/File:PMLP40341-Haydn-SchoepfungVSpeters.pdf)
used as an example.

%</readme>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{<+version+>}{<+date+>}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
%
% \StopEventually{}
%
% \section{Implementation}
%
% \iffalse
%<*package>
% \fi
%
% \subsection{part-extraction.sty}
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{part-extraction}[2015/06/19 Class to extract parts from a full ensemble score.]
\directlua{
  part = require('part-extraction')
}
%    \end{macrocode}
%
% The |grffile| package makes it possible to include image files
% containing underscores, whitespaces etc.
%    \begin{macrocode}
\RequirePackage{grffile}
%    \end{macrocode}
% The |graphicx| package is more robust than the package |graphics|.
%    \begin{macrocode}
\RequirePackage{graphicx}
%    \end{macrocode}
%
% \subsubsection{Options}
%
% We use |PE| as abbreviation for \emph{part extraction}.
%    \begin{macrocode}
\SetupKeyvalOptions{
  family=PE,
  prefix=PE@
}
%    \end{macrocode}
%    \begin{macrocode}
\newif\ifseparator
\separatorfalse
\DeclareVoidOption{separator}{\separatortrue}
%    \end{macrocode}

%    \begin{macrocode}
\define@key{PE}{path}{\directlua{part.set_path('#1')}}
%    \end{macrocode}
%
%    \begin{macrocode}
\define@key{PE}{extension}{\directlua{part.set_extension('#1')}}
%    \end{macrocode}
%
%    \begin{macrocode}
\define@key{PE}{title}{\def\PE@title{#1}}
%    \end{macrocode}
%
%    \begin{macrocode}
\define@key{PE}{subtitle}{\def\PE@subtitle{#1}}
%    \end{macrocode}
%
%    \begin{macrocode}
\define@key{PE}{composer}{\def\PE@composer{#1}}
%    \end{macrocode}
%
%    \begin{macrocode}
\ProcessKeyvalOptions*
%    \end{macrocode}
%
% \subsubsection{Makros}
%
% \begin{macro}{\part@system}
%    \begin{macrocode}
\newcommand{\part@system}[1]{%
  \noindent%
  \includegraphics[width=\linewidth]{{#1}}%
  \ifseparator%
    \vfil%
    \par%
    \noindent%
    \includegraphics{separator}%
  \else%
  \fi%
  \par%
  \vfil%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\PE@all@systems}
%    \begin{macrocode}
\newcommand{\PE@all@systems}{%
  \makeatletter
  \directlua{
    part.print_all_systems()
  }%
  \makeatother
  \vfill
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\PE@system}
%    \begin{macrocode}
\newcommand{\PE@system}[1][1]{%
  \makeatletter
  \directlua{
    part.print_next_systems('#1')
  }%
  \makeatother
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\PE@system@by@number}
%    \begin{macrocode}
\newcommand{\PE@system@by@number}[1]{%
  \makeatletter
  \directlua{
    part.print_system_by_number('#1')
  }%
  \makeatother
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\PE@system@count}
%    \begin{macrocode}
\newcommand{\PE@system@count}{%
  \directlua{
    part.print_system_count()
  }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{partextraction}
%    \begin{macrocode}
\newenvironment{partextraction}[1][]{%
  \kvsetkeys{PE}{#1}%
  \directlua{part.scandir()}%
  \let\allsystems\PE@all@systems%
  \let\system\PE@system%
  \let\countS\PE@system@count%
  \let\systemN\PE@system@by@number%
  \ifx\PE@title\undefined\else \centerline{\Large{\bfseries{}\PE@title}} \fi%
  \ifx\PE@subtitle\undefined\else \centerline{\large{\PE@subtitle}} \fi%
  \ifx\PE@composer\undefined\else \par\raggedleft\textit{\PE@composer}\par \fi%
}{}
%    \end{macrocode}
%
% \end{environment}
%
% \iffalse
%</package>
%<*lua>
% \fi
%
% \subsection{part-extraction.lua}
%
%    \begin{macrocode}
require('lfs')
%    \end{macrocode}
%
%    \begin{macrocode}
local part = {}
part.systems = {}
%    \end{macrocode}
%
%    \begin{macrocode}
function part.set_path(path)
  part.path = path
end
%    \end{macrocode}
%
%    \begin{macrocode}
function part.set_extension(extension)
  part.extension = extension
end
%    \end{macrocode}
%
%    \begin{macrocode}
function part.scandir()

  if part.extension == nil then
    part.extension = 'png'
  end

  if part.path == nil then
    part.path = './'
  end

  for filename in lfs.dir(part.path) do
    if filename:match('%.' .. part.extension .. '$') then
      table.insert(part.systems, filename)
    end
  end
  table.sort(part.systems)
end
%    \end{macrocode}
%
%    \begin{macrocode}
function part.make_system(filename)
  tex.print('\\part@system{' .. part.path .. filename .. '}')
end
%    \end{macrocode}
%
%    \begin{macrocode}
function part.print_all_systems()
  for key, filename in pairs(part.systems) do
    part.make_system(filename)
  end
end
%    \end{macrocode}
%
%    \begin{macrocode}
function part.print_next_systems(count)
  if not part.number then
    part.number = 1
  end

  if not count then
    count = 0
  else
    count = count - 1
  end

  local tmp
  for number = part.number, part.number + count do
    part.make_system(part.systems[number])
    tmp = number
  end

  part.number = tmp + 1
end
%    \end{macrocode}
%
%    \begin{macrocode}
function part.print_system_by_number(number)
  part.make_system(part.systems[tonumber(number)])
end
%    \end{macrocode}
%
%    \begin{macrocode}
function part.print_system_count()
  local count = 0
  for _ in pairs(part.systems) do count = count + 1 end
  tex.print(count)
end
%    \end{macrocode}
%
%    \begin{macrocode}
return part
%    \end{macrocode}
% \iffalse
%</lua>
% \fi
%
% \Finale
\endinput
